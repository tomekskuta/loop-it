{"version":3,"sources":["locales/index.js","locales/en/index.js","locales/pl/index.js","i18n.js","helpers/methods.js","helpers/constructors.js","helpers/localStorage.js","models/lists.js","models/openedList.js","models/index.js","styles.js","view/components/AppHeader.jsx","view/components/MainView.jsx","view/components/ListWrapper.jsx","view/components/Modal.jsx","view/List/components/AddTask.jsx","view/List/components/Task.jsx","view/List/components/ListMenu.jsx","helpers/constants.js","view/List/index.jsx","view/NewList/Form.jsx","view/NewList/index.jsx","view/index.jsx","App.js","serviceWorker.js","index.js"],"names":["locales","en","general","lists","pl","i18n","use","XHR","LanguageDetector","initReactI18n","init","resources","fallbackLng","defaultNS","debug","interpolation","escapeValue","detection","order","caches","lookupLocalStorage","error","console","log","isLang","locale","lang","language","shortLang","split","changeLang","changeLanguage","setId","elements","length","Math","max","apply","Object","toConsumableArray","map","elem","id","getNow","format","Date","setNextCycleStart","date","_ref","count","period","nextCycleStart","checkStartDate","isFuture","addDays","addWeeks","addMonths","List","name","startDate","loopIt","color","cycleLength","cycleEnd","created_at","updated_at","tasks","Task","_ref2","text","done","setStorageItem","key","item","localStorage","setItem","JSON","stringify","state","reducers","getLists","updatedLists","parse","getItem","list","updatedTasks","task","objectSpread","addList","concat","editList","editedProperty","value","currentList","find","deleteList","listId","filter","addTask","newTask","updatedList","editTask","taskData","taskId","currentTask","deleteTask","openedList","openList","effects","dispatch","store","redux","middlewares","logger","models","GlobalStyles","createGlobalStyle","_templateObject","theme","AppBarContent","styled","div","AppHeader_templateObject","IconButtonWrapper","_templateObject2","Languages","_templateObject3","Title","h2","_templateObject4","AppHeader","showNewList","newListButtonDisabled","_useT","useT","slicedToArray","react_default","a","createElement","index_es","position","disabled","onClick","Add_default","size","variant","getLangButtons","MainWrapper","MainView_templateObject","colors","mainBackground","ContentWrapper","MainView_templateObject2","ListsWrapper","MainView_templateObject3","MainView","children","components_AppHeader","CardWrapper","Card","ListWrapper_templateObject","SubheaderWrapper","ListWrapper_templateObject2","ListWrapper","title","subheader","actionButton","action","defaultProps","Modal","open","onClose","onSubmit","contentText","submitText","cancelText","t","StyledListItem","ListItem","AddTask_templateObject","AddTask","type","placeholder","required","Task_templateObject","StyledSecondaryAction","ListItemSecondaryAction","Task_templateObject2","StyledInput","Input","Task_templateObject3","StyledIconButton","IconButton","Task_templateObject4","setDone","changeText","Task_StyledListItem","checked","onChange","defaultValue","Delete_default","Row","FormGroup","ListMenu_templateObject","margin","StyledDeleteIcon","DeleteIcon","ListMenu_templateObject2","ListMenu","periodOptions","setCycleLength","currentPeriod","setPeriod","setStartDate","react","row","label","inputProps","min","step","native","CYCLE_PERIODS","connect","_useT2","_useState","useState","_useState2","isMenu","toggleMenu","_useState3","_useState4","isModal","toggleModal","timeToNextCycle","distanceInWords","handleEditList","handleDeleteTask","renderLengthOptions","periodOption","components_ListWrapper","event","preventDefault","target","ArrowBack_default","MoreVert_default","components_ListMenu","e","disablePadding","components_Task","handleChangeTaskText","components_AddTask","components_Modal","Form_templateObject","Form","submit","Form_Row","autoFocus","NewList_Form","newList","resetForm","isNewList","toggleNewList","useEffect","hideNewList","shouldShowNewList","components_MainView","currentLists","view_List","view_NewList","renderLists","App","es","styled_components_browser_esm","dist","view","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.289a6a62.chunk.js","sourcesContent":["import en from './en';\nimport pl from './pl';\n\nexport default { en, pl };\n","import general from './general.json';\nimport lists from './lists.json';\n\nexport default { general, lists };\n","import general from './general.json';\nimport lists from './lists.json';\n\nexport default { general, lists };\n","import i18n from 'i18next';\nimport { initReactI18n } from 'react-i18next/hooks';\nimport XHR from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport locales from './locales';\n\nconst defaultNameSpace = 'general';\n\nconst handleLanguage = error => {\n  if (error) console.log(error);\n\n  const isLang = locale => locale === 'en' || locale === 'pl';\n\n  const lang = i18n.language;\n  if (isLang(lang)) return;\n\n  const shortLang = lang.split('-')[0];\n  const changeLang = lang => i18n.changeLanguage(lang);\n  if (isLang(shortLang)) return changeLang(shortLang);\n\n  return changeLang('en');\n};\n\ni18n\n  .use(XHR)\n  .use(LanguageDetector)\n  .use(initReactI18n)\n  .init(\n    {\n      resources: locales,\n      fallbackLng: 'en',\n      defaultNS: defaultNameSpace,\n      debug: true,\n      interpolation: {\n        escapeValue: false\n      },\n      detection: {\n        order: ['localStorage', 'navigator'],\n        caches: ['localStorage'],\n        lookupLocalStorage: 'lang'\n      }\n    },\n    handleLanguage\n  );\n\nexport default i18n;\n","import format from 'date-fns/format';\nimport addDays from 'date-fns/add_days';\nimport addWeeks from 'date-fns/add_weeks';\nimport addMonths from 'date-fns/add_months';\nimport isFuture from 'date-fns/is_future';\n\nexport const setId = elements => {\n  if (!elements || elements.length === 0) return 1;\n  const lastId = Math.max(...elements.map(elem => elem.id));\n  return lastId + 1;\n};\n\nexport const getNow = () => format(new Date());\n\nexport const setNextCycleStart = (date, { count, period }) => {\n  let nextCycleStart = date;\n\n  const addPeriod = () => {\n    if (period === 'D') return addDays(nextCycleStart, count);\n    if (period === 'W') return addWeeks(nextCycleStart, count);\n    if (period === 'M') return addMonths(nextCycleStart, count);\n  };\n  const checkStartDate = () => {\n    if (isFuture(nextCycleStart)) return;\n    nextCycleStart = addPeriod();\n    checkStartDate();\n  };\n\n  checkStartDate();\n  return format(nextCycleStart);\n};\n","import { getNow } from './methods';\n\nexport const List = ({\n  id,\n  name,\n  loopIt,\n  color,\n  startDate,\n  cycleLength,\n  cycleEnd,\n  nextCycleStart\n}) => ({\n  id,\n  name,\n  created_at: getNow(),\n  updated_at: getNow(),\n  cycleLength,\n  startDate,\n  nextCycleStart,\n  tasks: []\n  // loopIt,\n  // cycleEnd,\n  // color\n});\n\nexport const Task = ({ id, text }) => ({\n  id,\n  text,\n  created_at: getNow(),\n  updated_at: getNow(),\n  done: false\n});\n","export const getStorageItem = item => JSON.parse(localStorage.getItem(item));\n\nexport const setStorageItem = (key, item) => localStorage.setItem(key, JSON.stringify(item));\n","import isFuture from 'date-fns/is_future';\n\nimport { List, Task } from '../helpers/constructors';\nimport { getStorageItem, setStorageItem } from '../helpers/localStorage';\nimport { setId, setNextCycleStart, getNow } from '../helpers/methods';\n\nconst getLists = () => {\n  const currentLists = getStorageItem('lists') || [];\n  const updatedLists = currentLists.map(list => {\n    const { nextCycleStart, tasks } = list;\n    if (!isFuture(nextCycleStart)) {\n      const updatedTasks = tasks.map(task => ({ ...task, done: false }));\n      return {\n        ...list,\n        nextCycleStart: setNextCycleStart(nextCycleStart, list.cycleLength),\n        tasks: updatedTasks,\n        updated_at: getNow()\n      };\n    }\n    return list;\n  });\n\n  setStorageItem('lists', updatedLists);\n  return updatedLists;\n};\n\nconst addList = (state, list) => {\n  const id = setId(state);\n  const nextCycleStart = setNextCycleStart(list.startDate, list.cycleLength);\n\n  const newList = new List({ id, ...list, nextCycleStart });\n  const lists = [newList, ...state];\n\n  setStorageItem('lists', lists);\n  return lists;\n};\n\nconst editList = (state, list) => {\n  const { id, editedProperty, value } = list;\n  const currentList = state.find(elem => elem.id === id);\n\n  if (typeof editedProperty === 'string') currentList[editedProperty] = value;\n  else currentList[editedProperty[0]][editedProperty[1]] = value;\n\n  currentList.updated_at = getNow();\n  const updatedLists = state.map(elem => (elem.id === id ? currentList : elem));\n\n  setStorageItem('lists', updatedLists);\n  return updatedLists;\n};\n\nconst deleteList = (state, listId) => {\n  const updatedLists = state.filter(list => list.id !== listId);\n  setStorageItem('lists', updatedLists);\n  return updatedLists;\n};\n\nconst addTask = (state, task) => {\n  const currentList = state.find(list => list.id === task.listId);\n  const id = setId(currentList.tasks);\n\n  const newTask = new Task({ id, text: task.text });\n\n  const tasks = [...currentList.tasks, newTask];\n  const updatedList = { ...currentList, tasks, updated_at: getNow() };\n\n  const updatedLists = state.map(list => (list.id === task.listId ? updatedList : list));\n\n  setStorageItem('lists', updatedLists);\n  return updatedLists;\n};\n\nconst editTask = (state, taskData) => {\n  const { value, editedProperty, taskId, listId } = taskData;\n  const currentList = state.find(list => list.id === listId);\n\n  const currentTask = currentList.tasks.find(task => task.id === taskId);\n  currentTask.updated_at = getNow();\n  currentTask[editedProperty] = value;\n\n  const updatedTasks = currentList.tasks.map(task => (task.id === taskId ? currentTask : task));\n  const updatedList = { ...currentList, tasks: updatedTasks, updated_at: getNow() };\n\n  const updatedLists = state.map(list => (list.id === listId ? updatedList : list));\n\n  setStorageItem('lists', updatedLists);\n  return updatedLists;\n};\n\nconst deleteTask = (state, taskData) => {\n  const { taskId, listId } = taskData;\n  const currentList = state.find(list => list.id === listId);\n  currentList.tasks = currentList.tasks.filter(task => task.id !== taskId);\n  const updatedLists = state.map(list => (list.id === listId ? currentList : list));\n\n  setStorageItem('lists', updatedLists);\n  return updatedLists;\n};\n\nconst lists = {\n  state: [],\n  reducers: { getLists, addList, editList, deleteList, addTask, editTask, deleteTask }\n};\n\nexport default lists;\n","const openedList = {\n  state: 0,\n  reducers: {\n    openList: (state, id) => id\n  },\n  effects: dispatch => ({})\n};\n\nexport default openedList;\n","import { init } from '@rematch/core';\nimport logger from 'redux-logger';\n\nimport lists from './lists';\nimport openedList from './openedList';\n\nconst store = init({\n  redux: {\n    middlewares: [logger]\n  },\n  models: {\n    lists,\n    openedList\n  }\n});\n\nexport default store;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n      monospace;\n  }\n`;\n\nconst theme = {};\n\nexport { GlobalStyles, theme };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { AppBar, Button, IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { useT } from 'react-i18next/hooks';\n\nconst AppBarContent = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst IconButtonWrapper = styled.div`\n  position: absolute;\n  left: 1em;\n`;\n\nconst Languages = styled.div`\n  display: flex;\n  align-items: flex-start;\n  position: absolute;\n  right: 1em;\n`;\n\nconst Title = styled.h2`\n  width: 100%;\n  text-align: center;\n`;\n\nconst getLangButtons = i18n =>\n  ['en', 'pl'].map(lang => (\n    <Button\n      key={lang}\n      size=\"small\"\n      onClick={() => i18n.changeLanguage(lang)}\n      variant={(i18n.language === lang && 'outlined') || 'text'}\n    >\n      {lang}\n    </Button>\n  ));\n\nconst AppHeader = ({ showNewList, newListButtonDisabled }) => {\n  const [, i18n] = useT();\n  return (\n    <AppBar color=\"default\" position=\"relative\">\n      <AppBarContent>\n        <IconButtonWrapper>\n          <IconButton disabled={newListButtonDisabled} onClick={showNewList}>\n            <AddIcon />\n          </IconButton>\n        </IconButtonWrapper>\n        <Title>Loop it</Title>\n        <Languages>{getLangButtons(i18n)}</Languages>\n      </AppBarContent>\n    </AppBar>\n  );\n};\n\nAppHeader.propTypes = {\n  showNewList: PropTypes.func.isRequired,\n  newListButtonDisabled: PropTypes.bool.isRequired\n};\n\nexport default AppHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport AppHeader from './AppHeader';\n\nconst MainWrapper = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  background: ${({ theme }) => (theme.colors ? theme.colors.mainBackground : '#fff')};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ContentWrapper = styled.div`\n  height: 100%;\n  flex-grow: 1;\n  padding: 2em;\n`;\n\nconst ListsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst MainView = ({ children, showNewList, newListButtonDisabled }) => (\n  <MainWrapper>\n    <AppHeader showNewList={showNewList} newListButtonDisabled={newListButtonDisabled} />\n    <ContentWrapper>\n      <ListsWrapper>{children}</ListsWrapper>\n    </ContentWrapper>\n  </MainWrapper>\n);\n\nMainView.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array]).isRequired,\n  showNewList: PropTypes.func.isRequired,\n  newListButtonDisabled: PropTypes.bool.isRequired\n};\n\nexport default MainView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\n\nconst CardWrapper = styled(Card)`\n  cursor: default;\n  margin: 1em;\n`;\n\nconst SubheaderWrapper = styled.div`\n  margin-top: 1em;\n`;\n\nconst ListWrapper = ({ children, title, subheader, actionButton }) => (\n  <CardWrapper>\n    <CardHeader\n      title={title}\n      subheader={<SubheaderWrapper>{subheader}</SubheaderWrapper>}\n      action={actionButton}\n    />\n    <CardContent>{children}</CardContent>\n  </CardWrapper>\n);\n\nListWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.node.isRequired,\n  subheader: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  actionButton: PropTypes.node\n};\n\nListWrapper.defaultProps = {\n  subheader: null,\n  action: null\n};\n\nexport default ListWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useT } from 'react-i18next/hooks';\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  DialogActions,\n  Button\n} from '@material-ui/core';\n\nconst Modal = ({ open, onClose, onSubmit, title, contentText, submitText, cancelText }) => {\n  const [t] = useT();\n\n  const handleSubmit = () => {\n    if (!!onSubmit) onSubmit();\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      {title && <DialogTitle>{title}</DialogTitle>}\n      <DialogContent>\n        <DialogContentText>{contentText}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleSubmit}>{submitText || t('ok')}</Button>\n        {onSubmit && <Button onClick={onClose}>{cancelText || t('cancel')}</Button>}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func,\n  title: PropTypes.string,\n  contentText: PropTypes.string.isRequired,\n  submitText: PropTypes.string,\n  cancelText: PropTypes.string\n};\n\nModal.defaultProps = {\n  onSubmit: null,\n  title: '',\n  submitText: '',\n  cancelText: ''\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useT } from 'react-i18next/hooks';\n\nimport { ListItem, Input, Button } from '@material-ui/core';\n\nconst StyledListItem = styled(ListItem)`\n  padding: 0.5em 0 !important;\n`;\n\nconst AddTask = ({ addTask }) => {\n  const [t] = useT('lists');\n  return (\n    <StyledListItem>\n      <form onSubmit={addTask}>\n        <Button type=\"submit\" size=\"small\">\n          +\n        </Button>\n        <Input name=\"text\" placeholder={`${t('do something')}...`} required />\n      </form>\n    </StyledListItem>\n  );\n};\n\nAddTask.propTypes = {\n  addTask: PropTypes.func.isRequired\n};\n\nexport default AddTask;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { ListItem, ListItemSecondaryAction, Checkbox, Input, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst StyledListItem = styled(ListItem)`\n  &:first-child {\n    padding: 0.5em 0;\n  }\n`;\n\nconst StyledSecondaryAction = styled(ListItemSecondaryAction)`\n  display: flex;\n`;\n\nconst StyledInput = styled(Input)`\n  width: 120px;\n`;\n\nconst StyledIconButton = styled(IconButton)`\n  ${StyledListItem}:hover & {\n    visibility: visible;\n  }\n`;\n\nconst Task = ({ task, setDone, changeText, deleteTask }) => {\n  const { text, done } = task;\n\n  return (\n    <StyledListItem>\n      <Checkbox checked={done} onChange={setDone} />\n      <StyledSecondaryAction>\n        <form onSubmit={changeText}>\n          <StyledInput defaultValue={text} name=\"text\" required />\n        </form>\n        <StyledIconButton onClick={deleteTask}>\n          <DeleteIcon />\n        </StyledIconButton>\n      </StyledSecondaryAction>\n    </StyledListItem>\n  );\n};\n\nTask.propTypes = {\n  task: PropTypes.shape({\n    id: PropTypes.number,\n    text: PropTypes.string,\n    created_at: PropTypes.string,\n    updated_at: PropTypes.string,\n    done: PropTypes.bool\n  }).isRequired,\n  setDone: PropTypes.func.isRequired,\n  changeText: PropTypes.func.isRequired,\n  deleteTask: PropTypes.func.isRequired\n};\n\nexport default Task;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useT } from 'react-i18next/hooks';\nimport format from 'date-fns/format';\n\nimport { FormGroup, Button, TextField, Select } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst Row = styled(FormGroup)`\n  margin: ${({ margin }) => margin || 1}em 0 1em;\n`;\n\nconst StyledDeleteIcon = styled(DeleteIcon)`\n  margin-left: 1em;\n`;\n\nconst ListMenu = ({\n  deleteList,\n  periodOptions,\n  cycleLength,\n  setCycleLength,\n  currentPeriod,\n  setPeriod,\n  startDate,\n  setStartDate\n}) => {\n  const [t] = useT('lists');\n\n  return (\n    <Fragment>\n      <Row row>\n        <TextField\n          name=\"cycleLength\"\n          label={t('Cycle length')}\n          type=\"number\"\n          defaultValue={cycleLength}\n          inputProps={{\n            min: 1,\n            step: 1\n          }}\n          onChange={setCycleLength}\n        />\n        <Select value={currentPeriod} onChange={setPeriod} native>\n          {periodOptions}\n        </Select>\n      </Row>\n      <Row>\n        <TextField\n          name=\"startDate\"\n          type=\"date\"\n          label={t('Cycle start')}\n          defaultValue={format(startDate, 'YYYY-MM-DD')}\n          required\n          onChange={setStartDate}\n        />\n      </Row>\n      <Row margin=\"3\">\n        <Button variant=\"outlined\" onClick={deleteList}>\n          {t('delete list')}\n          <StyledDeleteIcon />\n        </Button>\n      </Row>\n    </Fragment>\n  );\n};\n\nListMenu.propTypes = {\n  deleteList: PropTypes.func.isRequired,\n  periodOptions: PropTypes.arrayOf(PropTypes.node).isRequired,\n  cycleLength: PropTypes.string.isRequired,\n  setCycleLength: PropTypes.func.isRequired,\n  currentPeriod: PropTypes.string.isRequired,\n  setPeriod: PropTypes.func.isRequired,\n  startDate: PropTypes.string.isRequired,\n  setStartDate: PropTypes.func.isRequired\n};\n\nexport default ListMenu;\n","export const CYCLE_PERIODS = [\n  { value: 'D', label: 'days' },\n  { value: 'W', label: 'weeks' },\n  { value: 'M', label: 'months' }\n];\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport distanceInWords from 'date-fns/distance_in_words';\nimport { useT } from 'react-i18next/hooks';\n\nimport en from 'date-fns/locale/en';\nimport pl from 'date-fns/locale/pl';\n\nimport { List, IconButton, Input } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nimport { ListWrapper, Modal } from '../components';\nimport { AddTask, Task, ListMenu } from './components';\n\nimport { CYCLE_PERIODS } from '../../helpers/constants';\n\nconst locale = { en, pl };\n\nconst ExistList = ({ list, tasks, addTask, editTask, deleteTask, editList, deleteList }) => {\n  const { id, name, cycleLength, nextCycleStart, startDate } = list;\n\n  const [t, i18n] = useT('lists');\n\n  const [isMenu, toggleMenu] = useState(false);\n  const [isModal, toggleModal] = useState(false);\n\n  const timeToNextCycle =\n    !(cycleLength.period === 'D' && cycleLength.count === '1') &&\n    `${t('Next cycle in')} ${distanceInWords(new Date(), nextCycleStart, {\n      locale: locale[i18n.language]\n    })}`;\n\n  const handleEditList = (value, editedProperty) => editList({ id, editedProperty, value });\n\n  const handleEditName = event => {\n    event.preventDefault();\n    handleEditList(event.target.name.value, 'name');\n  };\n\n  const handleAddTask = event => {\n    event.preventDefault();\n    const newTask = {\n      listId: id,\n      text: event.target.text.value\n    };\n    addTask(newTask);\n    event.target.text.value = '';\n  };\n\n  const handleSetTaskDone = (value, taskId) => {\n    const taskData = { editedProperty: 'done', value, taskId, listId: id };\n    editTask(taskData);\n  };\n\n  const handleChangeTaskText = (event, taskId) => {\n    event.preventDefault();\n    const taskData = { editedProperty: 'text', value: event.target.text.value, taskId, listId: id };\n    editTask(taskData);\n  };\n\n  const handleDeleteTask = taskId => {\n    const taskData = { taskId, listId: id };\n    deleteTask(taskData);\n  };\n\n  const renderTasks = () =>\n    tasks.map(task => (\n      <Task\n        key={task.id}\n        task={task}\n        setDone={(e, done) => handleSetTaskDone(done, task.id)}\n        changeText={event => handleChangeTaskText(event, task.id)}\n        deleteTask={() => handleDeleteTask(task.id)}\n      />\n    ));\n\n  const renderLengthOptions = CYCLE_PERIODS.map(periodOption => (\n    <option key={periodOption.value} value={periodOption.value}>\n      {t(`periods.${periodOption.label}`)}\n    </option>\n  ));\n\n  return (\n    <ListWrapper\n      title={\n        <form onSubmit={handleEditName}>\n          <Input defaultValue={name} name=\"name\" required />\n        </form>\n      }\n      subheader={timeToNextCycle}\n      actionButton={\n        <IconButton onClick={() => toggleMenu(!isMenu)}>\n          {isMenu ? <ArrowBackIcon /> : <MoreVertIcon />}\n        </IconButton>\n      }\n    >\n      {isMenu ? (\n        <ListMenu\n          deleteList={() => toggleModal(true)}\n          periodOptions={renderLengthOptions}\n          cycleLength={cycleLength.count}\n          setCycleLength={e => handleEditList(e.target.value, ['cycleLength', 'count'])}\n          currentPeriod={cycleLength.period}\n          setPeriod={e => handleEditList(e.target.value, ['cycleLength', 'period'])}\n          startDate={startDate}\n          setStartDate={e => handleEditList(e.target.value, 'startDate')}\n        />\n      ) : (\n        <List disablePadding>\n          {renderTasks()}\n          <AddTask addTask={handleAddTask} />\n        </List>\n      )}\n      <Modal\n        open={isModal}\n        onClose={() => toggleModal(false)}\n        onSubmit={() => deleteList(id)}\n        contentText={t('Are you sure?')}\n        submitText={t('delete')}\n      />\n    </ListWrapper>\n  );\n};\n\nExistList.propTypes = {\n  list: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    created_at: PropTypes.string,\n    updated_at: PropTypes.string,\n    cycleLength: PropTypes.object,\n    startDate: PropTypes.string,\n    nextCycleStart: PropTypes.string,\n    tasks: PropTypes.array\n  }).isRequired,\n  tasks: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addTask: PropTypes.func.isRequired,\n  editTask: PropTypes.func.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  editList: PropTypes.func.isRequired,\n  deleteList: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  editList: dispatch.lists.editList,\n  addTask: dispatch.lists.addTask,\n  deleteTask: dispatch.lists.deleteTask,\n  editTask: dispatch.lists.editTask,\n  deleteList: dispatch.lists.deleteList\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ExistList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useT } from 'react-i18next/hooks';\nimport format from 'date-fns/format';\n\nimport { TextField, Button, FormGroup, Select } from '@material-ui/core';\n\nconst Row = styled(FormGroup)`\n  margin: 1em 0;\n`;\n\nconst Form = ({ submit, periodOptions, currentPeriod, setPeriod }) => {\n  const [t] = useT('lists');\n\n  return (\n    <form onSubmit={submit}>\n      <Row>\n        <TextField autoFocus name=\"name\" label={t('Name')} required />\n      </Row>\n      <Row row>\n        <TextField\n          name=\"cycleLength\"\n          label={t('Cycle length')}\n          type=\"number\"\n          defaultValue={1}\n          inputProps={{\n            min: 1,\n            step: 1\n          }}\n        />\n        <Select value={currentPeriod} onChange={setPeriod} native>\n          {periodOptions}\n        </Select>\n      </Row>\n      <Row>\n        <TextField\n          name=\"startDate\"\n          type=\"date\"\n          label={t('Cycle start')}\n          defaultValue={format(new Date(), 'YYYY-MM-DD')}\n          required\n        />\n      </Row>\n      <FormGroup>\n        <Button type=\"submit\" variant=\"outlined\">\n          {t('add')}\n        </Button>\n      </FormGroup>\n      <p>* - {t('fields required')}</p>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n  periodOptions: PropTypes.node.isRequired,\n  currentPeriod: PropTypes.string.isRequired,\n  setPeriod: PropTypes.func.isRequired\n};\n\nexport default Form;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useT } from 'react-i18next/hooks';\nimport format from 'date-fns/format';\n\nimport Form from './Form';\nimport ListWrapper from '../components/ListWrapper';\n\nimport { CYCLE_PERIODS } from '../../helpers/constants';\n\nconst NewList = ({ addList }) => {\n  const [t] = useT('lists');\n\n  const [period, setPeriod] = useState('D');\n\n  const resetForm = event => {\n    event.target.name.value = '';\n    event.target.cycleLength.value = 1;\n    setPeriod('D');\n    event.target.startDate.value = format(new Date(), 'YYYY-MM-DD');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newList = {\n      name: event.target.name.value,\n      cycleLength: {\n        count: event.target.cycleLength.value,\n        period\n      },\n      startDate: event.target.startDate.value\n    };\n    addList(newList);\n    resetForm(event);\n  };\n\n  const renderLengthOptions = CYCLE_PERIODS.map(periodOption => (\n    <option key={periodOption.value} value={periodOption.value}>\n      {t(`periods.${periodOption.label}`)}\n    </option>\n  ));\n\n  return (\n    <ListWrapper title={t('newListHeader')}>\n      <Form\n        submit={handleSubmit}\n        currentPeriod={period}\n        setPeriod={e => setPeriod(e.target.value)}\n        periodOptions={renderLengthOptions}\n      />\n    </ListWrapper>\n  );\n};\n\nNewList.propTypes = {\n  addList: PropTypes.func.isRequired,\n  hideNewList: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  addList: dispatch.lists.addList\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewList);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport List from './List';\nimport NewList from './NewList';\nimport { MainView as MainViewComponent } from './components';\n\nconst MainView = ({ lists, getLists }) => {\n  const [isNewList, toggleNewList] = useState(false);\n\n  useEffect(getLists, []);\n\n  const hideNewList = () => toggleNewList(false);\n\n  const shouldShowNewList = () => isNewList || lists.length === 0;\n\n  const renderLists = () => {\n    const currentLists = lists.map(list => <List key={list.id} list={list} tasks={list.tasks} />);\n    return shouldShowNewList()\n      ? [<NewList key=\"newList\" hideNewList={hideNewList} />, ...currentLists]\n      : currentLists;\n  };\n\n  return (\n    <MainViewComponent\n      showNewList={() => toggleNewList(true)}\n      newListButtonDisabled={shouldShowNewList()}\n    >\n      {renderLists()}\n    </MainViewComponent>\n  );\n};\n\nMainView.propTypes = {\n  lists: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getLists: PropTypes.func.isRequired\n};\n\nconst stateToProps = state => ({ lists: state.lists });\nconst dispatchToProps = dispatch => ({ getLists: dispatch.lists.getLists });\n\nexport default connect(\n  stateToProps,\n  dispatchToProps\n)(MainView);\n","import React, { Fragment } from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport './i18n.js';\nimport { Normalize } from 'styled-normalize';\n\nimport store from './models';\nimport { GlobalStyles, theme } from './styles';\n\nimport View from './view';\n\nconst App = () => (\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <Fragment>\n        <Normalize />\n        <GlobalStyles />\n        <View />\n      </Fragment>\n    </ThemeProvider>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}